From 1e5aac9485b2efa841cbbebaabd1deb7782de6b2 Mon Sep 17 00:00:00 2001
From: Carl Cospel <ccospel@gmail.com>
Date: Mon, 24 Mar 2014 23:28:28 -0400
Subject: [PATCH 18/19] libopkg/opkg_install.c - Fix for virtual packages
To: opkg-devel@googlegroups.com
Cc: paul@paulbarker.me.uk

Replace providers of virtual packages that are conflict/provide/replace by another package

This fixes issue 89.

Signed-off-by: Carl Cospel <ccospel@gmail.com>
Signed-off-by: Paul Barker <paul@paulbarker.me.uk>
(cherry picked from commit 1b9a0d61137eaf475187fe9366e8d3bf705404bf)
Signed-off-by: Andreas Oberritter <obi@opendreambox.org>
---
 libopkg/opkg_install.c | 25 +++++++++++++++++++++++++
 libopkg/pkg_depends.c  |  5 ++++-
 2 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/libopkg/opkg_install.c b/libopkg/opkg_install.c
index 6d0ff1f..0be8200 100644
--- a/libopkg/opkg_install.c
+++ b/libopkg/opkg_install.c
@@ -422,6 +422,25 @@ pkg_remove_orphan_dependent(pkg_t *pkg, pkg_t *old_pkg)
 	return err;
 }
 
+/* adds the list of providers of the package being replaced */
+static void
+pkg_get_provider_replacees(pkg_t *pkg, abstract_pkg_vec_t *provided_by, pkg_vec_t *replacees)
+{
+     int i,j;
+
+     for (i=0; i<provided_by->len; i++) {
+	  abstract_pkg_t *ap = provided_by->pkgs[i];
+	  if (!ap->pkgs)
+	       continue;
+          for (j=0; j<ap->pkgs->len; j++) {
+              pkg_t *replacee = ap->pkgs->pkgs[j];
+              if (replacee->state_status == SS_INSTALLED ||
+                  replacee->state_status == SS_UNPACKED)
+                      pkg_vec_insert(replacees, replacee);
+          }
+     }
+}
+
 /* returns number of installed replacees */
 static int
 pkg_get_installed_replacees(pkg_t *pkg, pkg_vec_t *installed_replacees)
@@ -431,6 +450,12 @@ pkg_get_installed_replacees(pkg_t *pkg, pkg_vec_t *installed_replacees)
      int i, j;
      for (i = 0; i < replaces_count; i++) {
 	  abstract_pkg_t *ab_pkg = replaces[i];
+	  /* If any package listed in the replacement field is a virtual (provided)
+	   * package, check to see if it conflicts with any abstract package that pkg
+	   * provides
+	   */
+	  if (ab_pkg->provided_by && pkg_conflicts_abstract(pkg, ab_pkg))
+	       pkg_get_provider_replacees(pkg, ab_pkg->provided_by, installed_replacees);
 	  pkg_vec_t *pkg_vec = ab_pkg->pkgs;
 	  if (pkg_vec) {
 	       for (j = 0; j < pkg_vec->len; j++) {
diff --git a/libopkg/pkg_depends.c b/libopkg/pkg_depends.c
index b23caf6..5337e6c 100644
--- a/libopkg/pkg_depends.c
+++ b/libopkg/pkg_depends.c
@@ -437,7 +437,10 @@ static void __pkg_hash_fetch_conflictees(pkg_t *pkg, pkg_vec_t *installed_confli
 
     for (i = 0; i < available_pkgs->len; i++) {
         pkg_t *cpkg = available_pkgs->pkgs[i];
-        if (pkg_conflicts(cpkg, pkg) && !is_pkg_a_provides(cpkg, pkg) && !is_pkg_in_pkg_vec(installed_conflicts, cpkg))
+        if (pkg_conflicts(cpkg, pkg)
+                && !is_pkg_a_provides(cpkg, pkg)
+                && !is_pkg_in_pkg_vec(installed_conflicts, cpkg)
+                && !pkg_replaces(pkg, cpkg))
             pkg_vec_insert(installed_conflicts, cpkg);
     }
 
-- 
1.9.1

