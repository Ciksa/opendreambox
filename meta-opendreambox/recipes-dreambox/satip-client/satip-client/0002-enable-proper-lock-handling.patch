From e7a35462705e3dc51500df99fc618d582e712813 Mon Sep 17 00:00:00 2001
From: Stephan Reichholf <reichi@opendreambox.org>
Date: Thu, 9 Feb 2017 21:53:52 +0100
Subject: [PATCH 2/2] enable proper lock handling

---
 rtp.cpp    |  2 +-
 vtuner.cpp | 18 ++++++++++--------
 vtuner.h   | 12 +++++++++++-
 3 files changed, 22 insertions(+), 10 deletions(-)

diff --git a/rtp.cpp b/rtp.cpp
index a80f1ae..5b2fe75 100644
--- a/rtp.cpp
+++ b/rtp.cpp
@@ -43,7 +43,7 @@ satipRTP::satipRTP(int vtuner_fd)
 						m_rtcp_socket(-1),
 						m_thread(0),
 						m_running(false),
-						m_hasLock(true),
+						m_hasLock(false),
 						m_signalStrength(0),
 						m_signalQuality(0),
 						m_openok(false)
diff --git a/vtuner.cpp b/vtuner.cpp
index 1a21288..6ee70c4 100644
--- a/vtuner.cpp
+++ b/vtuner.cpp
@@ -497,14 +497,10 @@ void satipVtuner::vtunerEvent()
 
 		case MSG_READ_STATUS:
 			//INFO(MSG_MAIN,"MSG_READ_STATUS\n");
-//				if (m_satip_rtp)
-//				{
-//					if (m_satip_rtp->getHasLock())
-//						msg.body.status = FE_HAS_LOCK;
-//					else
-//						msg.body.status = 0;
-//				}
-			msg.body.status = FE_HAS_LOCK;
+			if (m_satip_rtp && m_satip_rtp->getHasLock())
+				msg.body.status = FE_HAS_LOCK;
+			else
+				msg.body.status = 0;
 			break;
 		case MSG_READ_BER:
 			//INFO(MSG_MAIN,"MSG_READ_BER\n");
@@ -559,6 +555,12 @@ void satipVtuner::vtunerEvent()
 			DEBUG(MSG_MAIN,"MSG_GET_PROPERTY\n");
 			break;
 
+		case MSG_GET_TUNE_SETTINGS:
+			msg.body.tune_settings.min_delay_ms = 50; // let linux-tv api ask every 50ms for locked/unlocked state...
+			msg.body.tune_settings.step_size = 0;
+			msg.body.tune_settings.max_drift = 0;
+			break;
+
 		default:
 			DEBUG(MSG_MAIN,"MSG_UNKNOWN: %d\n", msg.type);
 			break;
diff --git a/vtuner.h b/vtuner.h
index 33db6c5..990dec4 100644
--- a/vtuner.h
+++ b/vtuner.h
@@ -45,6 +45,7 @@
 #define MSG_TYPE_CHANGED			15
 #define MSG_SET_PROPERTY			16
 #define MSG_GET_PROPERTY			17
+#define MSG_GET_TUNE_SETTINGS		18
 
 #define MSG_NULL				1024
 #define MSG_DISCOVER			1025
@@ -54,12 +55,20 @@ typedef unsigned int   u32;
 typedef unsigned short u16;
 typedef unsigned char  u8;
 
+struct dvb_frontend_tune_settings
+{
+	int min_delay_ms;
+	int step_size;
+	int max_drift;
+};
+
 #if VMSG_TYPE1
 struct vtuner_message {
 	__u32 type;
 	union 
 	{
-        struct dvb_frontend_parameters fe_params;
+		struct dvb_frontend_parameters fe_params;
+		struct dvb_frontend_tune_settings tune_settings;
 
 #if DVB_API_VERSION >= 5
 		struct dtv_property prop;
@@ -117,6 +126,7 @@ struct vtuner_message
                 } vsb;
             } u;
         } fe_params;
+		struct dvb_frontend_tune_settings tune_settings;
         struct dtv_property prop;
         u32 status;
         __u32 ber;
-- 
2.7.4

