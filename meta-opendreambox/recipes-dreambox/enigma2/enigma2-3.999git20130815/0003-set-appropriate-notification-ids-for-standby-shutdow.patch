From e85288c7959a485872b51a2ae7178cdd2ce2649d Mon Sep 17 00:00:00 2001
From: ghost <andreas.monzner@dream-property.net>
Date: Fri, 16 Aug 2013 02:19:02 +0200
Subject: [PATCH 3/6] set appropriate notification ids for standby / shutdown
 notifications

---
 Navigation.py                  | 2 +-
 RecordTimer.py                 | 4 ++--
 SleepTimer.py                  | 4 ++--
 usr/lib/enigma2/python/Screens/TaskView.py | 4 ++--
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/usr/lib/enigma2/python/Navigation.py b/usr/lib/enigma2/python/Navigation.py
index 1fd6dca..ead1177 100644
--- a/usr/lib/enigma2/python/Navigation.py
+++ b/usr/lib/enigma2/python/Navigation.py
@@ -39,7 +39,7 @@ class Navigation:
 				self.__wasTimerWakeup = True
 				if nextRecordTimerAfterEventActionAuto and (len(self.getRecordings()) or abs(self.RecordTimer.getNextRecordingTime() - time()) <= 360):
 					if not Screens.Standby.inTryQuitMainloop: # not a shutdown messagebox is open
-						Notifications.AddNotification(Screens.Standby.Standby, domain="RecordTimer")
+						Notifications.AddNotificationWithID("Standby", Screens.Standby.Standby, domain="RecordTimer")
 		self.SleepTimer = SleepTimer.SleepTimer()
 
 	def wasTimerWakeup(self):
diff --git a/usr/lib/enigma2/python/RecordTimer.py b/usr/lib/enigma2/python/RecordTimer.py
index 6156de2..5094271 100644
--- a/usr/lib/enigma2/python/RecordTimer.py
+++ b/usr/lib/enigma2/python/RecordTimer.py
@@ -345,11 +345,11 @@ class RecordTimerEntry(timer.TimerEntry, object):
 
 	def sendStandbyNotification(self, answer):
 		if answer:
-			Notifications.AddNotification(Screens.Standby.Standby, domain="RecordTimer")
+			Notifications.AddNotificationWithID("Standby", Screens.Standby.Standby, domain="RecordTimer")
 
 	def sendTryQuitMainloopNotification(self, answer):
 		if answer:
-			Notifications.AddNotification(Screens.Standby.TryQuitMainloop, 1, domain="RecordTimer")
+			Notifications.AddNotificationWithID("Shutdown", Screens.Standby.TryQuitMainloop, 1, domain="RecordTimer")
 
 	def getNextActivation(self):
 		if self.state == self.StateEnded:
diff --git a/usr/lib/enigma2/python/SleepTimer.py b/usr/lib/enigma2/python/SleepTimer.py
index e9f8dbe..a5df904 100644
--- a/usr/lib/enigma2/python/SleepTimer.py
+++ b/usr/lib/enigma2/python/SleepTimer.py
@@ -44,12 +44,12 @@ class SleepTimerEntry(timer.TimerEntry):
 	def shutdown(self, answer):
 		if answer is not None:
 			if answer and not Screens.Standby.inTryQuitMainloop:
-				Notifications.AddNotification(Screens.Standby.TryQuitMainloop, 1, domain="SleepTimer")
+				Notifications.AddNotificationWithID("Shutdown", Screens.Standby.TryQuitMainloop, 1, domain="SleepTimer")
 
 	def standby(self, answer):
 		if answer is not None:
 			if answer and not Screens.Standby.inStandby:
-				Notifications.AddNotification(Screens.Standby.Standby, domain="SleepTimer")
+				Notifications.AddNotificationWithID("Standby", Screens.Standby.Standby, domain="SleepTimer")
 
 class SleepTimer(timer.Timer):
 	def __init__(self):
diff --git a/usr/lib/enigma2/python/Screens/TaskView.py b/usr/lib/enigma2/python/Screens/TaskView.py
index 219d8db..8c1e2f8 100644
--- a/usr/lib/enigma2/python/Screens/TaskView.py
+++ b/usr/lib/enigma2/python/Screens/TaskView.py
@@ -141,8 +141,8 @@ class JobView(InfoBarNotifications, Screen, ConfigListScreen):
 
 	def sendStandbyNotification(self, answer):
 		if answer:
-			Notifications.AddNotification(Screens.Standby.Standby, domain = "JobManager")
+			Notifications.AddNotificationWithID("Standby", Screens.Standby.Standby, domain = "JobManager")
 
 	def sendTryQuitMainloopNotification(self, answer):
 		if answer:
-			Notifications.AddNotification(Screens.Standby.TryQuitMainloop, 1, domain = "JobManager")
+			Notifications.AddNotificationWithID("Shutdown", Screens.Standby.TryQuitMainloop, 1, domain = "JobManager")
-- 
1.8.4.rc1

