From 2cd90a31eb6a5152dda6a1f89242449b9b72ac6a Mon Sep 17 00:00:00 2001
From: ghost <andreas.monzner@dream-property.net>
Date: Tue, 28 Mar 2017 02:05:01 +0200
Subject: [PATCH 7/9] dont allow to do anything in manual / automatic scan when
 all nim slots are empty or all tuners are disabled

---
 usr/lib/enigma2/python/Screens/ScanSetup.py | 33 ++++++++++++++++++++-------------
 1 file changed, 20 insertions(+), 13 deletions(-)

diff --git a/usr/lib/enigma2/python/Screens/ScanSetup.py b/usr/lib/enigma2/python/Screens/ScanSetup.py
index 7a93e80..8e9ce7b 100644
--- a/usr/lib/enigma2/python/Screens/ScanSetup.py
+++ b/usr/lib/enigma2/python/Screens/ScanSetup.py
@@ -2,7 +2,7 @@ from Screen import Screen
 from Screens.DefaultWizard import DefaultWizard
 from ServiceScan import ServiceScan
 from Components.config import config, ConfigSubsection, ConfigSelection, \
-	ConfigYesNo, ConfigInteger, getConfigListEntry, ConfigSlider, ConfigOnOff
+	ConfigYesNo, ConfigInteger, getConfigListEntry, ConfigSlider, ConfigOnOff, ConfigText
 from Components.ActionMap import NumberActionMap, ActionMap
 from Components.ConfigList import ConfigListScreen
 from Components.NimManager import nimmanager, getConfigSatlist
@@ -1283,7 +1283,7 @@ class ScanSetup(ConfigListScreen, Screen, TransponderSearchSupport, CableTranspo
 			self.typeOfScanEntry = getConfigListEntry(_("Type of scan"), self.scan_typeterrestrial)
 			self.list.append(self.typeOfScanEntry)
 
-		if len(self.scan_type.getChoices()) > 1:
+		if len(self.scan_system.getChoices()) > 1:
 			self.systemEntry = getConfigListEntry(_('System'), self.scan_system)
 			self.list.append(self.systemEntry)
 
@@ -1380,12 +1380,13 @@ class ScanSetup(ConfigListScreen, Screen, TransponderSearchSupport, CableTranspo
 					self.list.append(getConfigListEntry(_("Code rate HP"), base_path.crh))
 					self.list.append(getConfigListEntry(_("Code rate LP"), base_path.crl))
 
-		self.list.append(getConfigListEntry(_("Network scan"), self.scan_networkScan))
-		self.list.append(getConfigListEntry(_("Clear before scan"), self.scan_clearallservices))
-		self.list.append(getConfigListEntry(_("Only Free scan"), self.scan_onlyfree))
-		if config.usage.setup_level.index >= 2:
-			self.list.append(getConfigListEntry(_("Lookup other SDT"), self.scan_otherSDT))
-			self.list.append(getConfigListEntry(_("Skip empty transponders"), self.scan_skipEmpty))
+		if len(self.scan_system.getChoices()) > 1:
+			self.list.append(getConfigListEntry(_("Network scan"), self.scan_networkScan))
+			self.list.append(getConfigListEntry(_("Clear before scan"), self.scan_clearallservices))
+			self.list.append(getConfigListEntry(_("Only Free scan"), self.scan_onlyfree))
+			if config.usage.setup_level.index >= 2:
+				self.list.append(getConfigListEntry(_("Lookup other SDT"), self.scan_otherSDT))
+				self.list.append(getConfigListEntry(_("Skip empty transponders"), self.scan_skipEmpty))
 		self["config"].list = self.list
 		self["config"].l.setList(self.list)
 
@@ -1398,7 +1399,9 @@ class ScanSetup(ConfigListScreen, Screen, TransponderSearchSupport, CableTranspo
 	def newConfig(self):
 		cur = self["config"].getCurrent()
 		print "cur is", cur
-		if cur == self.typeOfScanEntry or \
+		if cur is None:
+			pass
+		elif cur == self.typeOfScanEntry or \
 			cur == self.tunerEntry or \
 			cur == self.systemEntry or \
 			(self.modulationEntry and self.systemEntry[1].value == "DVB-S2" and cur == self.modulationEntry) or \
@@ -1600,10 +1603,13 @@ class ScanSetup(ConfigListScreen, Screen, TransponderSearchSupport, CableTranspo
 					#  * the S2 tuner when it's connected with a S-only tuner ...
 					# Listing both would be required whenever non-backwards-compatible demods show up
 					# Currently none if the above is actually possible
-				nim_list.append((str(n.slot), n.friendly_full_description, idx))
-				if idx == slot_number:
-					tuned_slot = str(n.slot)
+				if n.isEnabled('DVB-S') or n.isEnabled('DVB-C') or n.isEnabled('DVB-T'):
+					nim_list.append((str(n.slot), n.friendly_full_description, idx))
+					if idx == slot_number:
+						tuned_slot = str(n.slot)
 
+			if not nim_list:
+				self.scan_nims = ConfigText('')
 			if tuned_slot:
 				self.scan_nims = ConfigSelection(choices = nim_list, default = tuned_slot)
 			else:
@@ -1835,7 +1841,8 @@ class ScanSetup(ConfigListScreen, Screen, TransponderSearchSupport, CableTranspo
 					self.nim_sat_band_cutoff_frequency.append(None)
 					self.scan_satselection.append(None)
 
-			self.scan_nims.addNotifier(self.nimChanged)
+			if self.scan_nims.value != '':
+				self.scan_nims.addNotifier(self.nimChanged)
 
 			return True
 
-- 
2.1.4

