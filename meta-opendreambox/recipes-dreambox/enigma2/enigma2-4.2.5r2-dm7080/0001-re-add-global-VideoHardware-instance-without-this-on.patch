From ffb9608a181ea7fb494a1849bbef844b6c225a28 Mon Sep 17 00:00:00 2001
From: ghost <andreas.monzner@dream-property.net>
Date: Thu, 5 Nov 2015 21:54:37 +0100
Subject: [PATCH] re-add global VideoHardware instance (without this on e2
 start the selected video mode is not set and some plugins (like
 AutoResolution) needs VideoHardware.video_hw, add comment about unused
 hotplug stuff

---
 .../SystemPlugins/Videomode/VideoHardware.py       | 30 ++++++++++++++++++++++
 .../Plugins/SystemPlugins/Videomode/VideoWizard.py |  4 +--
 .../Plugins/SystemPlugins/Videomode/plugin.py      | 19 +++++++++-----
 3 files changed, 44 insertions(+), 9 deletions(-)

diff --git a/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/VideoHardware.py b/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/VideoHardware.py
index 840413b..cafea0a 100644
--- a/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/VideoHardware.py
+++ b/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/VideoHardware.py
@@ -370,3 +370,33 @@ class VideoHardware:
 			open("/proc/stb/video/policy2", "w").write(policy2)
 		except IOError:
 			pass
+
+instance = None
+
+# the following is a little bit vooodoo to make video_hw a property
+# normally only classes can have properties ;)
+# ripped from here: http://www.dr-josiah.com/2013/12/properties-on-python-modules.html
+
+from sys import modules
+
+@property
+def video_hw(module):
+	global instance
+	if instance is None:
+		instance = VideoHardware()
+	return instance
+
+class Module(object):
+	pass
+
+module = Module()
+module.__dict__ = globals()
+
+for k, v in list(module.__dict__.items()):
+	if isinstance(v, property):
+		setattr(Module, k, v)
+		del module.__dict__[k]
+
+module._module = modules[module.__name__]
+module._pmodule = module
+modules[module.__name__] = module
diff --git a/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/VideoWizard.py b/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/VideoWizard.py
index 6d48887..64d444d 100644
--- a/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/VideoWizard.py
+++ b/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/VideoWizard.py
@@ -1,7 +1,7 @@
 from Screens.Wizard import WizardSummary
 from Screens.WizardLanguage import WizardLanguage
 from Screens.Rc import Rc
-from VideoHardware import VideoHardware
+import VideoHardware
 
 from Components.Pixmap import Pixmap
 from Components.config import config, configfile
@@ -38,7 +38,7 @@ class VideoWizardSummary(WizardSummary):
 
 class VideoWizard():
 	def __init__(self):
-		self.hw = VideoHardware()
+		self.hw = VideoHardware.video_hw
 
 		self.port = None
 		self.mode = None
diff --git a/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/plugin.py b/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/plugin.py
index 5175762..700b988 100644
--- a/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/plugin.py
+++ b/usr/lib/enigma2/python/Plugins/SystemPlugins/Videomode/plugin.py
@@ -5,7 +5,7 @@ from Components.ConfigList import ConfigListScreen
 from Components.config import getConfigListEntry, config, ConfigBoolean, ConfigNothing
 from Components.Sources.StaticText import StaticText
 
-from VideoHardware import VideoHardware
+import VideoHardware
 from Components.ResourceManager import resourcemanager
 
 config.misc.videowizardenabled = ConfigBoolean(default = True)
@@ -177,6 +177,8 @@ class VideoSetup(Screen, ConfigListScreen):
 		from Screens.Setup import SetupSummary
 		return SetupSummary
 
+# FYI !! the following hotplug stuff is unused.... autostart is never called...
+
 class VideomodeHotplug:
 	def __init__(self, hw):
 		self.hw = hw
@@ -206,27 +208,29 @@ hotplug = None
 
 def startHotplug():
 	global hotplug
-	hotplug = VideomodeHotplug(VideoHardware())
+	hotplug = VideomodeHotplug(VideoHardware.video_hw)
 	hotplug.start()
 
 def stopHotplug():
 	global hotplug
 	hotplug.stop()
 
-
 def autostart(reason, session = None, **kwargs):
 	if session is not None:
-		global my_global_session
-		my_global_session = session
 		return
-
 	if reason == 0:
 		startHotplug()
 	elif reason == 1:
 		stopHotplug()
 
+#unused END....
+
+def createInstance(reason, session = None, **kwargs):
+	if reason == 0:
+		video_hw = VideoHardware.video_hw
+
 def videoSetupMain(session, **kwargs):
-	session.open(VideoSetup, VideoHardware())
+	session.open(VideoSetup, VideoHardware.video_hw)
 
 def startSetup(menuid):
 	if menuid != "osd_video_audio":
@@ -240,6 +244,7 @@ def VideoWizard(*args, **kwargs):
 
 def Plugins(**kwargs):
 	list = [
+		PluginDescriptor(where = [PluginDescriptor.WHERE_AUTOSTART], fnc = createInstance),
 		PluginDescriptor(name=_("Video Setup"), description=_("Advanced Video Setup"), where = PluginDescriptor.WHERE_MENU, needsRestart = False, fnc=startSetup) 
 	]
 	return list
-- 
1.9.1

