From caab0054166f5dc9a8d514d2a5fa76733a23453a Mon Sep 17 00:00:00 2001
From: ghost <andreas.monzner@dream-property.net>
Date: Tue, 1 Sep 2015 23:34:51 +0200
Subject: [PATCH] split previous service handling to own class and use it in
 MediaCenter PlaylistPlayer when audio content is played...

---
 usr/lib/enigma2/python/Plugins/Extensions/MediaCenter/PlaylistPlayer.py       |  9 +++++-
 usr/lib/enigma2/python/Screens/InfoBarGenerics.py              | 34 +++++++++++++---------
 2 files changed, 28 insertions(+), 15 deletions(-)

diff --git a/usr/lib/enigma2/python/Plugins/Extensions/MediaCenter/PlaylistPlayer.py b/usr/lib/enigma2/python/Plugins/Extensions/MediaCenter/PlaylistPlayer.py
index 315eb13..38a02bc 100644
--- a/usr/lib/enigma2/python/Plugins/Extensions/MediaCenter/PlaylistPlayer.py
+++ b/usr/lib/enigma2/python/Plugins/Extensions/MediaCenter/PlaylistPlayer.py
@@ -4,6 +4,7 @@ from Screens.ChoiceBox import ChoiceBox
 from Screens.HelpMenu import HelpableScreen
 from Screens.MessageBox import MessageBox
 from Screens.Screen import Screen
+from Screens.InfoBarGenerics import PlayerBase
 from ServiceReference import ServiceReference
 from Tools.Directories import resolveFilename, SCOPE_CONFIG
 #plugin imports
@@ -11,7 +12,10 @@ from Tools.Log import Log
 from MediaCore import MediaCore, mediaCore
 from DatabasePlaylist import DatabasePlaylist
 
-class PlaylistPlayer(Screen, HelpableScreen):
+# when playing audio content no dedicated player class is used
+# so here we must inherit from PlayerBase to not break the 
+# previous service handling
+class PlaylistPlayer(Screen, HelpableScreen, PlayerBase):
 	def __init__(self, session, playlist_string, type):
 		Screen.__init__(self, session)
 		HelpableScreen.__init__(self)
@@ -24,6 +28,9 @@ class PlaylistPlayer(Screen, HelpableScreen):
 
 		self.onClose.append(self.__onClose)
 
+		if type == MediaCore.TYPE_AUDIO:
+			PlayerBase.__init__(self)
+
 	def _initPlaylist(self, playlist_id):
 		if playlist_id > 0:
 			self._playlist = DatabasePlaylist.get(id=playlist_id)
diff --git a/usr/lib/enigma2/python/Screens/InfoBarGenerics.py b/usr/lib/enigma2/python/Screens/InfoBarGenerics.py
index 22c8ad8..5c68236 100644
--- a/usr/lib/enigma2/python/Screens/InfoBarGenerics.py
+++ b/usr/lib/enigma2/python/Screens/InfoBarGenerics.py
@@ -869,7 +869,25 @@ class InfoBarRdsDecoder:
 			self.RassSlidePicChanged()
 		self.rds_display.show()
 
-class InfoBarSeek:
+class PlayerBase:
+	def __init__(self):
+		self.lastservice = self.session.nav.getCurrentlyPlayingServiceReference()
+
+		if not isinstance(self, InfoBarChannelSelection):
+			self.onFirstExecBegin.append(self.__registerPlayer)
+
+	def __registerPlayer(self):
+		self.prev_player = self.session.current_player
+		self.session.current_player = self
+		self.onClose.append(self.__unRegisterPlayer)
+
+	def __unRegisterPlayer(self):
+		self.session.current_player = self.prev_player
+		self.session.nav.playService(self.lastservice)
+
+# Since we dont want to change any existing player class, here we assume that each player inherits from InfoBarSeek.
+# If this is not the case the player explicitely have to inherit from PlayerBase and must call the init function!
+class InfoBarSeek(PlayerBase):
 	"""handles actions like seeking, pause"""
 
 	SEEK_STATE_PLAY = (0, 0, 0, ">")
@@ -933,19 +951,7 @@ class InfoBarSeek:
 
 		self.__seekableStatusChanged()
 
-		self.lastservice = self.session.nav.getCurrentlyPlayingServiceReference()
-
-		if not isinstance(self, InfoBarChannelSelection):
-			self.onFirstExecBegin.append(self.__registerPlayer)
-
-	def __registerPlayer(self):
-		self.prev_player = self.session.current_player
-		self.session.current_player = self
-		self.onClose.append(self.__unRegisterPlayer)
-
-	def __unRegisterPlayer(self):
-		self.session.current_player = self.prev_player
-		self.session.nav.playService(self.lastservice)
+		PlayerBase.__init__(self)
 
 	def makeStateForward(self, n):
 		return (0, n, 0, ">> %dx" % n)
-- 
1.9.1

