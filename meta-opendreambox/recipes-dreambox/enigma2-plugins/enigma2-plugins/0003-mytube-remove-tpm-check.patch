From bf2e7380f07259bc6560200ee8970af90b43e3bd Mon Sep 17 00:00:00 2001
From: Andreas Oberritter <obi@opendreambox.org>
Date: Thu, 11 Apr 2019 14:32:55 +0200
Subject: [PATCH] mytube: remove tpm check

---
 mytube/src/MyTubeService.py | 14 -------
 mytube/src/__init__.py      | 26 -------------
 mytube/src/plugin.py        | 73 ++-----------------------------------
 3 files changed, 4 insertions(+), 109 deletions(-)

diff --git a/mytube/src/MyTubeService.py b/mytube/src/MyTubeService.py
index fd910e35..b5785093 100644
--- a/mytube/src/MyTubeService.py
+++ b/mytube/src/MyTubeService.py
@@ -1,7 +1,6 @@
 # -*- coding: iso-8859-1 -*-
 from Tools.Log import Log
 
-from __init__ import decrypt_block
 from socket import gaierror, error
 import os, httplib
 from urllib import quote
@@ -17,19 +16,6 @@ from Plugins.SystemPlugins.TubeLib.youtube.YoutubeAuth import YoutubeAuth
 
 from Tools.Directories import resolveFilename, SCOPE_CONFIG
 
-def validate_cert(cert, key):
-	buf = decrypt_block(cert[8:], key)
-	if buf is None:
-		return None
-	return buf[36:107] + cert[139:196]
-
-def get_rnd():
-	try:
-		rnd = os.urandom(8)
-		return rnd
-	except:
-		return None
-
 class GoogleSuggestions():
 	def __init__(self):
 		self.hl = "en"
diff --git a/mytube/src/__init__.py b/mytube/src/__init__.py
index 51fd99fb..e69de29b 100644
--- a/mytube/src/__init__.py
+++ b/mytube/src/__init__.py
@@ -1,26 +0,0 @@
-import hashlib
-
-def bin2long(s):
-	return reduce(lambda x, y:(x << 8L) + y, map(ord, s))
-
-def long2bin(l):
-	res = ""
-	for byte in range(128):
-		res += chr((l >> (1024 - (byte + 1) * 8)) & 0xff)
-	return res
-
-def rsa_pub1024(src, mod):
-	return long2bin(pow(bin2long(src), 65537, bin2long(mod)))
-
-def decrypt_block(src, mod):
-	if len(src) != 128 and len(src) != 202:
-		return None
-	dest = rsa_pub1024(src[:128], mod)
-	hash = hashlib.sha1(dest[1:107])
-	if len(src) == 202:
-		hash.update(src[131:192])
-	result = hash.digest()
-	if result == dest[107:127]:
-		return dest
-	return None
-
diff --git a/mytube/src/plugin.py b/mytube/src/plugin.py
index 63c5c9a6..5fa511b2 100644
--- a/mytube/src/plugin.py
+++ b/mytube/src/plugin.py
@@ -23,20 +23,15 @@ from Plugins.Plugin import PluginDescriptor
 
 from MyTubePlayer import MyTubePlayer
 from MyTubeSearch import ConfigTextWithGoogleSuggestions, MyTubeTasksScreen, MyTubeHistoryScreen
-from MyTubeService import validate_cert, get_rnd, myTubeService
+from MyTubeService import myTubeService
 from MyTubeSettings import MyTubeSettingsScreen
 
 from Plugins.SystemPlugins.TubeLib.youtube.Search import Search
 
-from __init__ import decrypt_block
-
-from enigma import eTPM, eTimer, ePoint, ePicLoad, eServiceReference
+from enigma import eTimer, ePoint, ePicLoad, eServiceReference
 from os import path as os_path, remove as os_remove
 from twisted.web import client
 
-etpm = eTPM()
-rootkey = ['\x9f', '|', '\xe4', 'G', '\xc9', '\xb4', '\xf4', '#', '&', '\xce', '\xb3', '\xfe', '\xda', '\xc9', 'U', '`', '\xd8', '\x8c', 's', 'o', '\x90', '\x9b', '\\', 'b', '\xc0', '\x89', '\xd1', '\x8c', '\x9e', 'J', 'T', '\xc5', 'X', '\xa1', '\xb8', '\x13', '5', 'E', '\x02', '\xc9', '\xb2', '\xe6', 't', '\x89', '\xde', '\xcd', '\x9d', '\x11', '\xdd', '\xc7', '\xf4', '\xe4', '\xe4', '\xbc', '\xdb', '\x9c', '\xea', '}', '\xad', '\xda', 't', 'r', '\x9b', '\xdc', '\xbc', '\x18', '3', '\xe7', '\xaf', '|', '\xae', '\x0c', '\xe3', '\xb5', '\x84', '\x8d', '\r', '\x8d', '\x9d', '2', '\xd0', '\xce', '\xd5', 'q', '\t', '\x84', 'c', '\xa8', ')', '\x99', '\xdc', '<', '"', 'x', '\xe8', '\x87', '\x8f', '\x02', ';', 'S', 'm', '\xd5', '\xf0', '\xa3', '_', '\xb7', 'T', '\t', '\xde', '\xa7', '\xf1', '\xc9', '\xae', '\x8a', '\xd7', '\xd2', '\xcf', '\xb2', '.', '\x13', '\xfb', '\xac', 'j', '\xdf', '\xb1', '\x1d', ':', '?']
-
 config.plugins.mytube = ConfigSubsection()
 config.plugins.mytube.search = ConfigSubsection()
 
@@ -212,12 +207,10 @@ class MyTubePlayerMainScreen(Screen, ConfigListScreen):
 		<widget name="ButtonBlue" position="0,0" size="0,0"/>
 	</screen>"""
 
-	def __init__(self, session, l2key=None):
+	def __init__(self, session):
 		Screen.__init__(self, session)
 		self.session = session
 		self._userCodeMbx = None
-		self.l2key = l2key
-		self.l3key = None
 		self.skin_path = plugin_path
 		self.FeedURL = None
 		self.ytfeed = None
@@ -365,38 +358,7 @@ class MyTubePlayerMainScreen(Screen, ConfigListScreen):
 		if current[1].help_window.instance is not None:
 			current[1].help_window.instance.hide()
 
-		l3cert = etpm.getData(eTPM.DT_LEVEL3_CERT)
-		if l3cert is None or l3cert is "":
-			self["videoactions"].setEnabled(False)
-			self["searchactions"].setEnabled(False)
-			self["config_actions"].setEnabled(False)
-			self["historyactions"].setEnabled(False)
-			self["statusactions"].setEnabled(True)
-			self.hideSuggestions()
-			self.statuslist = []
-			self.statuslist.append(( _("Genuine Dreambox validation failed!"), _("Verify your Dreambox authenticity by running the genuine dreambox plugin!" ) ))
-			self["feedlist"].style = "state"
-			self['feedlist'].setList(self.statuslist)
-			return
-
-		self.l3key = validate_cert(l3cert, self.l2key)
-		if self.l3key is None:
-			print "l3cert invalid"
-			return
-		rnd = get_rnd()
-		if rnd is None:
-			print "random error"
-			return
-
-		val = etpm.computeSignature(rnd)
-		result = decrypt_block(val, self.l3key)
-
 		self.statuslist = []
-		if result[80:88] != rnd:
-			self.statuslist.append(( _("Genuine Dreambox validation failed!"), _("Verify your Dreambox authenticity by running the genuine dreambox plugin!" ) ))
-			self["feedlist"].style = "state"
-			self['feedlist'].setList(self.statuslist)
-			return
 
 		# we need to login here; startService() is fired too often for external curl
 #		self.tryUserLogin()
@@ -445,21 +407,6 @@ class MyTubePlayerMainScreen(Screen, ConfigListScreen):
 			self["VKeyIcon"].hide()
 			self.statuslist = []
 			self.hideSuggestions()
-			result = None
-			if self.l3key is not None:
-				rnd = get_rnd()
-				if rnd is None:
-					return
-				val = etpm.computeSignature(rnd)
-				result = decrypt_block(val, self.l3key)
-			if not result or result[80:88] != rnd:
-				self["key_green"].show()
-				self.statuslist.append(( _("Genuine Dreambox validation failed!"), _("Verify your Dreambox authenticity by running the genuine dreambox plugin!" ) ))
-				self["feedlist"].style = "state"
-				self['feedlist'].setList(self.statuslist)
-				return
-
-			print "Genuine Dreambox validation passed"
 
 			if self.HistoryWindow is not None:
 				self.HistoryWindow.deactivate()
@@ -1538,19 +1485,7 @@ class MyTubeVideoHelpScreen(Screen):
 
 
 def MyTubeMain(session, **kwargs):
-	l2 = False
-	l2cert = etpm.getData(eTPM.DT_LEVEL2_CERT)
-	if l2cert is None:
-		print "l2cert not found"
-		return
-
-	l2key = validate_cert(l2cert, rootkey)
-	if l2key is None:
-		print "l2cert invalid"
-		return
-	l2 = True
-	if l2:
-		session.open(MyTubePlayerMainScreen, l2key)
+	session.open(MyTubePlayerMainScreen)
 
 def Plugins(path, **kwargs):
 	global plugin_path
