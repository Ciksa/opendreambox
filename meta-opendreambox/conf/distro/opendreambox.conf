#@TYPE: Distribution
#@NAME: OpenDreambox
#@DESCRIPTION: Distribution configuration for OpenDreambox

#USER_CLASSES += "image-prelink"
INHERIT += "recipe_sanity"

DISTRO_NAME = "${DISTRO}"
DISTRO_VERSION = "2.2.0"

# meta/conf/distro/include/default-distrovars.inc
DISTRO_FEATURES_DEFAULT ?= "alsa argp bluetooth ext2 largefile usbhost wifi xattr nfs zeroconf pci 3g \
                            ppp smbfs systemd xinetd"
DISTRO_FEATURES_BACKFILL_CONSIDERED = "pulseaudio"
DISTRO_FEATURES_GCC ?= ""
DISTRO_FEATURES_GCC_mipsel ?= " mplt"
DISTRO_FEATURES_GFX ?= " opengl wayland x11"
DISTRO_FEATURES_GFX_mipsel ?= " opengl"
DISTRO_FEATURES_append = "${DISTRO_FEATURES_GCC}${DISTRO_FEATURES_GFX}"

# meta/conf/distro/defaultsetup.conf
PACKAGE_CLASSES ?= "package_deb"

# meta/recipes-core/sysvinit/sysvinit-inittab_2.88dsf.bb
SYSVINIT_ENABLED_GETTYS = ""

# meta/classes/image_types.bbclass
IMAGE_FSTYPES =+ "tar.xz"
XZ_COMPRESSION_LEVEL ?= ""

# meta/classes/image.bbclass
IMAGE_PKGTYPE ?= "${@base_contains('PACKAGE_CLASSES', 'package_deb', 'deb', 'ipk', d)}"

# package versions
PREFERRED_VERSION_gnupg ?= "1.4.7"
PREFERRED_VERSION_xserver-nodm-init ?= "1.0"

PREFERRED_PROVIDER_dreambox-image ?= "${@base_contains('PACKAGE_CLASSES', 'package_deb', 'dreambox-image-deb', 'dreambox-image-ipk', d)}"

PREFERRED_PROVIDER_jpeg ?= "libjpeg-turbo"
PREFERRED_PROVIDER_jpeg-native ?= "libjpeg-turbo-native"

PREFERRED_PROVIDER_virtual/update-alternatives = "${@base_contains('PACKAGE_CLASSES', 'package_deb', 'dpkg', 'opkg-utils', d)}"
PREFERRED_PROVIDER_virtual/update-alternatives-native = "${@base_contains('PACKAGE_CLASSES', 'package_deb', 'dpkg-native', 'opkg-utils-native', d)}"
VIRTUAL-RUNTIME_update-alternatives = "${@base_contains('PACKAGE_CLASSES', 'package_deb', 'update-alternatives-dpkg', 'update-alternatives-opkg', d)}"

PACKAGECONFIG_pn-cogl-1.0 = "egl-kms egl-null \
        ${@base_contains('DISTRO_FEATURES', 'opengl', 'gles2', '', d)} \
        ${@base_contains('DISTRO_FEATURES', 'wayland', 'egl-wayland', '', d)} \
        ${@base_contains('DISTRO_FEATURES', 'x11', 'egl-x11', '', d)}"

PACKAGECONFIG_pn-connman = "l2tp openvpn pptp vpnc \
        ${@base_contains('DISTRO_FEATURES', '3g','3g', '', d)} \
        ${@base_contains('DISTRO_FEATURES', 'bluetooth','bluetooth', '', d)} \
        ${@base_contains('DISTRO_FEATURES', 'wifi','wifi wispr', '', d)}"

PACKAGECONFIG_pn-dpkg = "update-alternatives xz"
PACKAGECONFIG_pn-dpkg-native = "update-alternatives xz"

PACKAGECONFIG_pn-glmark2 = "gles2"

OPENDREAMBOX_GST_VERSION ?= "1.0"
OPENDREAMBOX_GST_VERSION_mipsel ?= "0.10"
PACKAGECONFIG_pn-gst-plugins-bad = "curl faad libmms modplug neon orc rtmp"
PACKAGECONFIG_pn-gst-plugins-base = "orc \
        ${@base_contains('DISTRO_FEATURES', 'x11', 'x11', '', d)}"
PACKAGECONFIG_pn-gst-plugins-good = "flac jpeg libpng orc soup zlib"
PACKAGECONFIG_pn-gst-plugins-ugly = "a52dec amrnb amrwb cdio lame mad mpeg2dec orc"
PACKAGECONFIG_append_pn-gstreamer1.0-plugins-bad = " faad libmms"
PACKAGECONFIG_append_pn-gstreamer1.0-plugins-ugly = " cdio"

PACKAGECONFIG_pn-libunwind = "lzma"

PACKAGECONFIG_DISTRO_pn-qtbase = "icu sql-sqlite"
PACKAGECONFIG_FB_pn-qtbase = "linuxfb"
PACKAGECONFIG_GL_pn-qtbase = "${@base_contains('DISTRO_FEATURES', 'opengl', 'gles2', '', d)}"
PACKAGECONFIG_pn-qtdeclarative = ""
PACKAGECONFIG_pn-qtwebkit = ""

PACKAGECONFIG_pn-weston = "${@base_contains('DISTRO_FEATURES', 'wayland', 'kms wayland', '', d)} \
                           ${@base_contains('DISTRO_FEATURES', 'x11', 'x11', '', d)} \
                           ${@base_contains('DISTRO_FEATURES', 'opengl', 'gles', '', d)} \
                           ${@base_contains('DISTRO_FEATURES', 'pam', 'launch', '', d)}"

PACKAGECONFIG_pn-xserver-xorg = "dri2 udev"

ROOT_HOME ?= "/root"

LICENSE_FLAGS_WHITELIST = "commercial"

# build some core libs with better compiler optimization for better performance
FULL_OPTIMIZATION_O3 = "-O3 -pipe ${DEBUG_FLAGS}"
FULL_OPTIMIZATION_pn-flac = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-jpeg = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-lame = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-liba52 = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libdca = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libgcrypt = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libmad = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libogg = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libpng = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libsamplerate = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libvorbis = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-tremor = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-zlib = "${FULL_OPTIMIZATION_O3}"

# Drop unused PACKAGE_EXTRA_ARCHS
PACKAGE_EXTRA_ARCHS = "${TUNE_PKGARCH}"

PREMIRRORS ?= "\
bzr://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
cvs://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
git://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
hg://.*/.*    http://dreamboxupdate.com/sources-mirror/ \n \
osc://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
p4://.*/.*    http://dreamboxupdate.com/sources-mirror/ \n \
svk://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
svn://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
bzr://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
cvs://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
git://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
hg://.*/.*    http://autobuilder.yoctoproject.org/sources/ \n \
osc://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
p4://.*/.*    http://autobuilder.yoctoproject.org/sources/ \n \
svk://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
svn://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n"

MIRRORS =+ "\
ftp://.*/.*    http://dreamboxupdate.com/sources-mirror/ \n \
http://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
https://.*/.*  http://dreamboxupdate.com/sources-mirror/ \n \
ftp://.*/.*    http://autobuilder.yoctoproject.org/sources/ \n \
http://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
https://.*/.*  http://autobuilder.yoctoproject.org/sources/ \n"

DREAMBOX_FEATURES ??= ""
DREAMBOX_IMAGE_SIZE ??= "1024"

# for compatibility with rm_old_work.bbclass
WORKDIR = "${TMPDIR}/work/${MULTIMACH_TARGET_SYS}/${PN}/${PF}"

include conf/distro/include/seperatebuilddir.inc
