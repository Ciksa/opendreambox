#@TYPE: Distribution
#@NAME: OpenDreambox
#@DESCRIPTION: Distribution configuration for OpenDreambox

#USER_CLASSES += "image-prelink"
INHERIT += "recipe_sanity"

DISTRO_NAME = "${DISTRO}"
DISTRO_VERSION = "2.5.0"

# meta/conf/distro/include/default-distrovars.inc
LOCALE_UTF8_ONLY ?= "1"
DISTRO_FEATURES_DEFAULT ?= "alsa argp bluetooth ext2 largefile usbhost wifi xattr nfs zeroconf pci \
                            ppp smbfs systemd xinetd"
DISTRO_FEATURES_BACKFILL_CONSIDERED = "pulseaudio"
DISTRO_FEATURES_GCC ?= ""
DISTRO_FEATURES_GCC_mipsel ?= " mplt"
DISTRO_FEATURES_GFX ?= " opengl"
DISTRO_FEATURES_append = "${DISTRO_FEATURES_GCC}${DISTRO_FEATURES_GFX}"

# meta/conf/distro/defaultsetup.conf
PACKAGE_CLASSES ?= "package_deb"

# meta/recipes-core/sysvinit/sysvinit-inittab_2.88dsf.bb
SYSVINIT_ENABLED_GETTYS = ""

# meta/classes/image_types.bbclass
IMAGE_FSTYPES =+ "tar.xz"
XZ_COMPRESSION_LEVEL ?= ""

# meta/classes/image.bbclass
IMAGE_PKGTYPE ?= "deb"

# package versions
PREFERRED_VERSION_gnupg ?= "1.4.7"
PREFERRED_VERSION_xserver-nodm-init ?= "1.0"

PREFERRED_PROVIDER_jpeg ?= "libjpeg-turbo"
PREFERRED_PROVIDER_jpeg-native ?= "libjpeg-turbo-native"

PREFERRED_PROVIDER_virtual/fftw = "fftw"

PREFERRED_PROVIDER_virtual/update-alternatives = "dpkg"
PREFERRED_PROVIDER_virtual/update-alternatives-native = "dpkg-native"
PREFERRED_PROVIDER_virtual/nativesdk-update-alternatives = "nativesdk-dpkg"

VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_initscripts = "systemd-compat-units"
VIRTUAL-RUNTIME_update-alternatives = "update-alternatives-dpkg"

PACKAGECONFIG_pn-apt = "lzma opkg"

PACKAGECONFIG_pn-cogl-1.0 = "egl-kms egl-null \
        ${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'gles2', '', d)} \
        ${@bb.utils.contains('DISTRO_FEATURES', 'wayland', 'egl-wayland', '', d)} \
        ${@bb.utils.contains('DISTRO_FEATURES', 'x11', 'egl-x11', '', d)}"

PACKAGECONFIG_pn-connman = "bluez l2tp openvpn pptp systemd vpnc wifi"

PACKAGECONFIG_pn-curl = "ssl zlib \
        ${@bb.utils.contains('DISTRO_FEATURES', 'ipv6', 'ipv6', '', d)}"

PACKAGECONFIG_pn-dpkg = "update-alternatives xz"
PACKAGECONFIG_pn-dpkg-native = "update-alternatives xz"
PACKAGECONFIG_pn-nativesdk-dpkg = "update-alternatives xz"

PACKAGECONFIG_pn-glmark2 = "drm-gles2"

ORCPACKAGECONFIG = "orc"
ORCPACKAGECONFIG_mipsel = ""

PACKAGECONFIG_pn-gstreamer1.0-plugins-base = " \
    ${@bb.utils.contains('DISTRO_FEATURES', 'x11', 'x11', '', d)} \
    ${@bb.utils.contains('DISTRO_FEATURES', 'alsa', 'alsa', '', d)} \
    ${ORCPACKAGECONFIG} ivorbis ogg theora vorbis pango"

PACKAGECONFIG_pn-gstreamer1.0-plugins-good = " \
    ${@bb.utils.contains('DISTRO_FEATURES', 'x11', 'x11', '', d)} \
    ${@bb.utils.contains('DISTRO_FEATURES', 'pulseaudio', 'pulseaudio', '', d)} \
    ${ORCPACKAGECONFIG} cairo flac gdk-pixbuf gudev jpeg libpng soup speex taglib"

PACKAGECONFIG_pn-gstreamer1.0-plugins-bad = " \
    ${@bb.utils.contains('DISTRO_FEATURES', 'wayland', 'wayland', '', d)} \
    ${@bb.utils.contains('DISTRO_FEATURES', 'bluetooth', 'bluez', '', d)} \
    ${@bb.utils.contains('DISTRO_FEATURES', 'directfb', 'directfb', '', d)} \
    ${ORCPACKAGECONFIG} curl uvch264 neon sndfile \
    hls sbc dash bz2 smoothstreaming \
    faad libmms assrender rtmp"

PACKAGECONFIG_pn-gstreamer1.0-plugins-ugly = " \
    ${ORCPACKAGECONFIG} a52dec lame mad mpeg2dec cdio"

PACKAGECONFIG_pn-ffmpeg = "avdevice avfilter avcodec avformat swresample swscale postproc \
                           bzlib lzma theora"

PACKAGECONFIG_pn-libunwind = "lzma"

PACKAGECONFIG_pn-mesa-demos = "drm osmesa freetype2 gbm egl gles2"

PACKAGECONFIG_pn-nfs-utils = "nfsv4 nfsv41 ipv6 tirpc"

PACKAGECONFIG_DISTRO_pn-qtbase = "icu sql-sqlite"
PACKAGECONFIG_FB_pn-qtbase = "linuxfb"
PACKAGECONFIG_GL_pn-qtbase = "${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'gles2', '', d)}"
PACKAGECONFIG_pn-qtdeclarative = ""
PACKAGECONFIG_pn-qtwebkit = ""
EXTRA_OECONF_append_pn-qtbase = " -qpa ${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'eglfs', 'linuxfb', d)}"

PACKAGECONFIG_pn-samba = "systemd zeroconf"

PACKAGECONFIG_pn-weston = "${@bb.utils.contains('DISTRO_FEATURES', 'wayland', 'kms wayland', '', d)} \
                           ${@bb.utils.contains('DISTRO_FEATURES', 'x11', 'x11', '', d)} \
                           ${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'gles', '', d)} \
                           ${@bb.utils.contains('DISTRO_FEATURES', 'pam', 'launch', '', d)}"

PACKAGECONFIG_pn-wpa-supplicant = "openssl"

PACKAGECONFIG_pn-xserver-xorg = "dri2 udev"

ROOT_HOME ?= "/root"

LICENSE_FLAGS_WHITELIST = "commercial"

# build some core libs with better compiler optimization for better performance
FULL_OPTIMIZATION_O3 = "-O3 -pipe ${DEBUG_FLAGS}"
FULL_OPTIMIZATION_pn-flac = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-jpeg = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-lame = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-liba52 = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libdca = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libgcrypt = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libmad = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libogg = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libpng = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libsamplerate = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-libvorbis = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-tremor = "${FULL_OPTIMIZATION_O3}"
FULL_OPTIMIZATION_pn-zlib = "${FULL_OPTIMIZATION_O3}"

# Drop unused PACKAGE_EXTRA_ARCHS
PACKAGE_EXTRA_ARCHS = "${TUNE_PKGARCH}"

PREMIRRORS ?= "\
bzr://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
cvs://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
git://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
hg://.*/.*    http://dreamboxupdate.com/sources-mirror/ \n \
osc://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
p4://.*/.*    http://dreamboxupdate.com/sources-mirror/ \n \
svn://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
bzr://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
cvs://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
git://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
hg://.*/.*    http://autobuilder.yoctoproject.org/sources/ \n \
osc://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
p4://.*/.*    http://autobuilder.yoctoproject.org/sources/ \n \
svn://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n"

MIRRORS =+ "\
ftp://.*/.*    http://dreamboxupdate.com/sources-mirror/ \n \
http://.*/.*   http://dreamboxupdate.com/sources-mirror/ \n \
https://.*/.*  http://dreamboxupdate.com/sources-mirror/ \n \
ftp://.*/.*    http://autobuilder.yoctoproject.org/sources/ \n \
http://.*/.*   http://autobuilder.yoctoproject.org/sources/ \n \
https://.*/.*  http://autobuilder.yoctoproject.org/sources/ \n"

DREAMBOX_FEATURES ??= ""
